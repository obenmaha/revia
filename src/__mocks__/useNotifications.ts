// Mock pour useNotifications hook
export const useNotifications = () => ({
  isSupported: true,
  permission: 'granted' as NotificationPermission,
  requestPermission: jest.fn().mockResolvedValue('granted' as NotificationPermission),
  showNotification: jest.fn().mockResolvedValue(undefined),
  closeNotification: jest.fn().mockResolvedValue(undefined),
  clearAllNotifications: jest.fn().mockResolvedValue(undefined),
  getNotifications: jest.fn().mockResolvedValue([]),
  onNotificationClick: jest.fn(),
  onNotificationClose: jest.fn(),
  onNotificationError: jest.fn(),
  onNotificationShow: jest.fn(),
  onNotificationPermissionChange: jest.fn(),
  isEnabled: true,
  isBlocked: false,
  isDenied: false,
  isDefault: false,
  isGranted: true,
  canRequest: true,
  canShow: true,
  canClose: true,
  canClear: true,
  canGet: true,
  canListen: true,
  canRequestPermission: true,
  canShowNotification: true,
  canCloseNotification: true,
  canClearAllNotifications: true,
  canGetNotifications: true,
  canListenToEvents: true,
  canRequestPermissionAsync: true,
  canShowNotificationAsync: true,
  canCloseNotificationAsync: true,
  canClearAllNotificationsAsync: true,
  canGetNotificationsAsync: true,
  canListenToEventsAsync: true,
});
