# Technical Preferences for App-Kine
# This file defines the technical choices and preferences for the project

# Repository Structure
repository_structure: 'Monorepo'
repository_rationale: 'Simplifies development and deployment for a single application with frontend and backend'

# Service Architecture
service_architecture: 'Monolith'
service_rationale: 'Simpler to develop and deploy initially, can be split into microservices later if needed'

# Testing Strategy
testing_approach: 'Full Testing Pyramid'
testing_rationale: 'Comprehensive testing ensures quality and reliability for a medical application'

# Frontend Technology Stack - Stack MVP 2025 Optimisée
frontend:
  framework: 'React 19'
  language: 'TypeScript'
  build_tool: 'Vite'
  styling: 'Tailwind CSS'
  ui_components: 'Radix UI + shadcn'
  state_management: 'Zustand'
  server_state: 'TanStack Query'
  form_handling: 'React Hook Form + Zod'
  testing: 'Vitest + Testing Library'
  routing: 'React Router v7'
  pwa: 'Workbox + Service Worker'

# Backend Technology Stack - Stack MVP 2025 Optimisée
backend:
  platform: 'Supabase'
  database: 'PostgreSQL 15+'
  api: 'Supabase REST + GraphQL'
  authentication: 'Supabase Auth (JWT + OAuth)'
  realtime: 'Supabase Realtime'
  storage: 'Supabase Storage'
  edge_functions: 'Supabase Edge Functions'
  security: 'Row Level Security (RLS)'
  validation: 'Zod'

# Database - Supabase Optimisé
database:
  provider: 'Supabase PostgreSQL'
  migrations: 'Supabase Migrations'
  seeding: 'Supabase Seed'
  connection_pooling: 'Automatique'
  ssl: true
  realtime: 'Supabase Realtime'
  row_level_security: true

# Security
security:
  authentication: 'JWT with refresh tokens'
  password_hashing: 'bcrypt'
  data_encryption: 'AES-256'
  https: true
  cors: 'Configured for production domains'
  rate_limiting: true

# Deployment - Stack MVP 2025
deployment:
  frontend: 'Vercel (Hobby)'
  backend: 'Supabase'
  database: 'Supabase PostgreSQL'
  cdn: 'CloudFlare (Free)'
  monitoring: 'Sentry (Free)'
  analytics: 'PostHog (optionnel)'
  pwa: 'Vercel + Workbox'

# Performance
performance:
  code_splitting: true
  lazy_loading: true
  image_optimization: true
  caching: 'Service Worker + HTTP Cache'
  compression: 'gzip'
  cdn: true

# Development Tools
development:
  editor: 'VS Code'
  extensions: ['Tailwind CSS', 'Prettier', 'ESLint', 'Prisma']
  package_manager: 'npm'
  version_control: 'Git'
  ci_cd: 'GitHub Actions'

# Code Quality
code_quality:
  linting: 'ESLint with TypeScript rules'
  formatting: 'Prettier'
  type_checking: 'TypeScript strict mode'
  pre_commit_hooks: 'Husky + lint-staged'
  code_review: 'Required for all PRs'

# Compliance
compliance:
  gdpr: true
  data_protection: true
  medical_data: true
  audit_trail: true
  data_retention: 'Configurable per data type'

# Scalability Considerations
scalability:
  horizontal_scaling: 'Stateless backend design'
  database_scaling: 'Read replicas + connection pooling'
  caching: 'Redis for session storage'
  cdn: 'Global content delivery'
  monitoring: 'Application performance monitoring'

# Integration Points
integrations:
  email: 'SMTP or SendGrid'
  sms: 'Twilio or similar'
  calendar: 'Google Calendar API'
  payments: 'Stripe or similar'
  file_storage: 'AWS S3 or similar'
  backup: 'Automated daily backups'

# Environment Configuration
environments:
  development:
    database: 'Local PostgreSQL'
    debug: true
    logging: 'verbose'
  staging:
    database: 'Supabase staging'
    debug: false
    logging: 'info'
  production:
    database: 'Supabase production'
    debug: false
    logging: 'error only'
    monitoring: true
